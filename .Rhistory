n <- nrow(x)
p <- ncol(x)
# Betas
colnames(x)[1] <- '(Intercept)'
betas <- solve(t(x) %*% x) %*% t(x) %*% y
fitted <- as.vector(as.vector(x %*% betas))
names(fitted) <- 1:nrow(x)
# Variance & Residuals
resid <- as.vector(y - x %*% betas)
names(resid) <- c(1:nrow(x))
SSyy=sum((y-mean(y))^2)
SSE=sum(resid^2)
s <- sqrt( SSE/(n-p))
ses <- sqrt(diag(solve(t(x) %*% x)))*s
# T scores and P-values
tscores <- betas / ses
pvalues <- 2*pt(abs(tscores),length(y) - ncol(x),lower.tail=FALSE)
coefs <- data.frame("Estimate" = betas, "Std. Error" = ses,
"t value" = tscores, "Pr(>|t|)" = pvalues, check.names = FALSE)
call <- noquote(paste(c('lm(', formula, ')'), collapse = ''))
output <- list(resid, nrow(betas), fitted, n-p, betas[,1], call, data, x, coefs, y)
names(output) <- c("residuals", "rank", "fitted.values", "df.residual", "coefficients", "call", "model", "data.frame", "cf", "y")
head(wine)
data <- wine
formula = quality ~ volatile.acidity + citric.acid + residual.sugar
na.action = 'impute'
covariates <- all.vars(formula)
covvariates
covariates
index <- rep(0,length(covariates))
index
for (i in 1:length(covariates)){
index[i] <- which(colnames(data) == covariates[i])
}
index
data <- data[,index]
data
anyNA(data)
head(data)
head(wine)
rm(wine)
library(bench)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(bench)
library(hw4)
head(wine)
hw4::wine
wine <- read.csv("/Users/gracebosma/Desktop/winequality-red.csv", sep = ';')[1:50,]
wine[2,2] <- NA
wine[5,8] <- NA;wine[10,4] <- NA; wine[3,9] <- NA
head(wine)
save(wine, file = 'data/wine.RData')
rm(wine)
library(bench)
library(hw4)
head(wine)
formula = quality ~ volatile.acidity + citric.acid + residual.sugar
data = wine
na.action = 'omit'
anyNA(data)
wine <- read.csv("/Users/gracebosma/Desktop/winequality-red.csv", sep = ';')[1:50,]
save(wine, file = 'data/wine.RData')
library(hw4)
head(wine)
library(bench)
library(hw4)
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine, na.action='impute')
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action = 'fail')
print_lm2(lm2(formula = quality ~ volatile.acidity * citric.acid , data = wine, na.action = 'fail'))
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine)
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine, na.action='impute')
print_lm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
print_lm2(lm2(formula = quality ~ volatile.acidity * citric.acid , data = wine))
print_lm2(lm2(formula = quality ~ volatile.acidity : citric.acid , data = wine, na.action = 'fail'))
print_lm2(lm2(formula = quality ~ volatile.acidity * citric.acid , data = wine))
quality_lm2 <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
quality_lm <- lm(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine)
all.equal(quality_lm2$coefficients, quality_lm$coefficients)
bench::mark(quality_lm2$coefficients, quality_lm$coefficients)
quality_lm2$residuals
lm(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)$residuals
quality_lm2$model
quality_lm2$fitted.values
quality_lm2$data.frame
quality_lm2$y
quality_lm2$cf
summarylm2(quality_lm2)
print_lm2(summarylm2(quality_lm2))
hw4::summarylm2(quality_lm2)
test <- summarylm2(quality_lm2)
test$Fstat
library(hw4)
test <- summarylm2(quality_lm2)
test$Fstat
library(bench)
library(hw4)
all.equal(quality_summarylm2$Fstat, quality_summarylm$Fstat)
library(bench)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(bench)
library(hw4)
print_lm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action='impute')
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action = 'fail')
# save the output
saved_output <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
saved_output$rank
print_lm2(lm2(formula = quality ~ volatile.acidity * citric.acid , data = wine))
print_lm2(lm2(formula = quality ~ volatile.acidity : citric.acid , data = wine, na.action = 'fail'))
quality_lm2 <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
quality_lm <- lm(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine)
all.equal(quality_lm2$coefficients, quality_lm$coefficients)
bench::mark(quality_lm2$coefficients, quality_lm$coefficients)
all.equal(quality_lm2$residuals, quality_lm$residuals)
bench::mark(quality_lm2$residuals, quality_lm$residuals)
all.equal(quality_lm2$rank, quality_lm$rank)
bench::mark(quality_lm2$rank, quality_lm$rank)
all.equal(quality_lm2$fitted.values, quality_lm$fitted.values)
bench::mark(quality_lm2$fitted.values, quality_lm$fitted.values)
all.equal(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
bench::mark(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
summarylm2(quality_lm2)
summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine))
print_lm2(summarylm2(quality_lm2))
# save the output
saved_output <- summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
saved_output$coefficients
quality_summarylm2 <- summarylm2(quality_lm2)
quality_summarylm <- summary(quality_lm)
all.equal(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
bench::mark(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
all.equal(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
bench::mark(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
all.equal(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
bench::mark(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
all.equal(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
bench::mark(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
all.equal(quality_summarylm2$Fstat, quality_summarylm$Fstat)
quality_summarylm2$Fstat
quality_summarylm$Fstat
quality_summarylm <- summary(quality_lm)
quality_summarylm$Fstat
quality_summarylm$fstatistic
all.equal(quality_summarylm2$Fstat, quality_summarylm$fstatistic)
all.equal(quality_summarylm2$fstatistic, quality_summarylm$fstatistic)
library(bench)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(bench)
library(hw4)
print_lm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action='impute')
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action = 'fail')
# save the output
saved_output <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
saved_output$rank
print_lm2(lm2(formula = quality ~ volatile.acidity * citric.acid , data = wine))
print_lm2(lm2(formula = quality ~ volatile.acidity : citric.acid , data = wine, na.action = 'fail'))
quality_lm2 <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
quality_lm <- lm(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine)
all.equal(quality_lm2$coefficients, quality_lm$coefficients)
bench::mark(quality_lm2$coefficients, quality_lm$coefficients)
all.equal(quality_lm2$residuals, quality_lm$residuals)
bench::mark(quality_lm2$residuals, quality_lm$residuals)
all.equal(quality_lm2$rank, quality_lm$rank)
bench::mark(quality_lm2$rank, quality_lm$rank)
all.equal(quality_lm2$fitted.values, quality_lm$fitted.values)
bench::mark(quality_lm2$fitted.values, quality_lm$fitted.values)
all.equal(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
bench::mark(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
summarylm2(quality_lm2)
summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine))
print_lm2(summarylm2(quality_lm2))
# save the output
saved_output <- summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
saved_output$coefficients
quality_summarylm2 <- summarylm2(quality_lm2)
quality_summarylm <- summary(quality_lm)
all.equal(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
bench::mark(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
all.equal(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
bench::mark(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
all.equal(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
bench::mark(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
all.equal(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
bench::mark(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
all.equal(quality_summarylm2$fstatistic, quality_summarylm$fstatistic)
library(hw4)
library(bench)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(bench)
library(hw4)
print_lm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action='impute')
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action = 'fail')
# save the output
saved_output <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
saved_output$rank
print_lm2(lm2(formula = quality ~ volatile.acidity * citric.acid , data = wine))
print_lm2(lm2(formula = quality ~ volatile.acidity : citric.acid , data = wine, na.action = 'fail'))
quality_lm2 <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
quality_lm <- lm(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine)
all.equal(quality_lm2$coefficients, quality_lm$coefficients)
bench::mark(quality_lm2$coefficients, quality_lm$coefficients)
all.equal(quality_lm2$residuals, quality_lm$residuals)
bench::mark(quality_lm2$residuals, quality_lm$residuals)
all.equal(quality_lm2$rank, quality_lm$rank)
bench::mark(quality_lm2$rank, quality_lm$rank)
all.equal(quality_lm2$fitted.values, quality_lm$fitted.values)
bench::mark(quality_lm2$fitted.values, quality_lm$fitted.values)
all.equal(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
bench::mark(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
summarylm2(quality_lm2)
summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine))
print_lm2(summarylm2(quality_lm2))
# save the output
saved_output <- summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
saved_output$coefficients
quality_summarylm2 <- summarylm2(quality_lm2)
quality_summarylm <- summary(quality_lm)
all.equal(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
bench::mark(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
all.equal(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
bench::mark(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
all.equal(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
bench::mark(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
all.equal(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
bench::mark(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
all.equal(quality_summarylm2$fstatistic, quality_summarylm$fstatistic)
library(hw4)
library(bench)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(bench)
library(hw4)
print_lm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action='impute')
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action = 'fail')
# save the output
saved_output <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
saved_output$rank
print_lm2(lm2(formula = quality ~ volatile.acidity * citric.acid , data = wine))
print_lm2(lm2(formula = quality ~ volatile.acidity : citric.acid , data = wine, na.action = 'fail'))
quality_lm2 <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
quality_lm <- lm(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine)
all.equal(quality_lm2$coefficients, quality_lm$coefficients)
bench::mark(quality_lm2$coefficients, quality_lm$coefficients)
all.equal(quality_lm2$residuals, quality_lm$residuals)
bench::mark(quality_lm2$residuals, quality_lm$residuals)
all.equal(quality_lm2$rank, quality_lm$rank)
bench::mark(quality_lm2$rank, quality_lm$rank)
all.equal(quality_lm2$fitted.values, quality_lm$fitted.values)
bench::mark(quality_lm2$fitted.values, quality_lm$fitted.values)
all.equal(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
bench::mark(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
summarylm2(quality_lm2)
summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine))
print_lm2(summarylm2(quality_lm2))
# save the output
saved_output <- summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
saved_output$coefficients
quality_summarylm2 <- summarylm2(quality_lm2)
quality_summarylm <- summary(quality_lm)
all.equal(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
bench::mark(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
all.equal(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
bench::mark(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
all.equal(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
bench::mark(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
all.equal(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
bench::mark(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
all.equal(quality_summarylm2$fstatistic, quality_summarylm$fstatistic)
all.equal(quality_summarylm2$fstatistic, quality_summarylm$fstatistic)
library(hw4)
library(hw4)
library(bench)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(bench)
library(hw4)
print_lm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action='impute')
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action = 'fail')
# save the output
saved_output <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
saved_output$rank
print_lm2(lm2(formula = quality ~ volatile.acidity * citric.acid , data = wine))
print_lm2(lm2(formula = quality ~ volatile.acidity : citric.acid , data = wine, na.action = 'fail'))
quality_lm2 <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
quality_lm <- lm(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine)
all.equal(quality_lm2$coefficients, quality_lm$coefficients)
bench::mark(quality_lm2$coefficients, quality_lm$coefficients)
all.equal(quality_lm2$residuals, quality_lm$residuals)
bench::mark(quality_lm2$residuals, quality_lm$residuals)
all.equal(quality_lm2$rank, quality_lm$rank)
bench::mark(quality_lm2$rank, quality_lm$rank)
all.equal(quality_lm2$fitted.values, quality_lm$fitted.values)
bench::mark(quality_lm2$fitted.values, quality_lm$fitted.values)
all.equal(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
bench::mark(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
summarylm2(quality_lm2)
summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine))
print_lm2(summarylm2(quality_lm2))
# save the output
saved_output <- summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
saved_output$coefficients
quality_summarylm2 <- summarylm2(quality_lm2)
quality_summarylm <- summary(quality_lm)
all.equal(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
bench::mark(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
all.equal(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
bench::mark(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
all.equal(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
bench::mark(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
all.equal(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
bench::mark(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
all.equal(quality_summarylm2$fstatistic, quality_summarylm$fstatistic)
quality_summarylm2$fstatistic
quality_summarylm$fstatistic
library(hw4)
library(bench)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(bench)
library(hw4)
print_lm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action='impute')
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action = 'fail')
# save the output
saved_output <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
saved_output$rank
print_lm2(lm2(formula = quality ~ volatile.acidity * citric.acid , data = wine))
print_lm2(lm2(formula = quality ~ volatile.acidity : citric.acid , data = wine, na.action = 'fail'))
quality_lm2 <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
quality_lm <- lm(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine)
all.equal(quality_lm2$coefficients, quality_lm$coefficients)
bench::mark(quality_lm2$coefficients, quality_lm$coefficients)
all.equal(quality_lm2$residuals, quality_lm$residuals)
bench::mark(quality_lm2$residuals, quality_lm$residuals)
all.equal(quality_lm2$rank, quality_lm$rank)
bench::mark(quality_lm2$rank, quality_lm$rank)
all.equal(quality_lm2$fitted.values, quality_lm$fitted.values)
bench::mark(quality_lm2$fitted.values, quality_lm$fitted.values)
all.equal(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
bench::mark(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
summarylm2(quality_lm2)
summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine))
print_lm2(summarylm2(quality_lm2))
# save the output
saved_output <- summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
saved_output$coefficients
quality_summarylm2 <- summarylm2(quality_lm2)
quality_summarylm <- summary(quality_lm)
all.equal(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
bench::mark(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
all.equal(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
bench::mark(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
all.equal(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
bench::mark(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
all.equal(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
bench::mark(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
all.equal(quality_summarylm2$fstatistic, quality_summarylm$fstatistic)
quality_summarylm$fstatistic
quality_summarylm2$fstatistic
library(hw4)
library(bench)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(bench)
library(hw4)
print_lm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action='impute')
lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine,
na.action = 'fail')
# save the output
saved_output <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
saved_output$rank
print_lm2(lm2(formula = quality ~ volatile.acidity * citric.acid , data = wine))
print_lm2(lm2(formula = quality ~ volatile.acidity : citric.acid , data = wine, na.action = 'fail'))
quality_lm2 <- lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)
quality_lm <- lm(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine)
all.equal(quality_lm2$coefficients, quality_lm$coefficients)
bench::mark(quality_lm2$coefficients, quality_lm$coefficients)
all.equal(quality_lm2$residuals, quality_lm$residuals)
bench::mark(quality_lm2$residuals, quality_lm$residuals)
all.equal(quality_lm2$rank, quality_lm$rank)
bench::mark(quality_lm2$rank, quality_lm$rank)
all.equal(quality_lm2$fitted.values, quality_lm$fitted.values)
bench::mark(quality_lm2$fitted.values, quality_lm$fitted.values)
all.equal(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
bench::mark(as.matrix(quality_lm$model), as.matrix(quality_lm2$model))
summarylm2(quality_lm2)
summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine))
print_lm2(summarylm2(quality_lm2))
# save the output
saved_output <- summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))
saved_output$coefficients
quality_summarylm2 <- summarylm2(quality_lm2)
quality_summarylm <- summary(quality_lm)
all.equal(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
bench::mark(as.matrix(quality_summarylm2$coefficients), as.matrix(quality_summarylm$coefficients))
all.equal(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
bench::mark(as.matrix(quality_summarylm2$r.squared), as.matrix(quality_summarylm$r.squared))
all.equal(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
bench::mark(quality_summarylm2$adj.r.squared, quality_summarylm$adj.r.squared)
all.equal(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
bench::mark(quality_summarylm2$cov.unscaled, quality_summarylm$cov.unscaled)
all.equal(quality_summarylm2$fstatistic, quality_summarylm$fstatistic)
all.equal(quality_summarylm2$fstatistic, quality_summarylm$fstatistic)
bench::mark(quality_summarylm2$fstatistic, quality_summarylm$fstatistic)
quality_summarylm$coefficients
summarylm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine)$fstatistic
summarylm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine))$fstatistic
summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar,
data = wine))$fstatistic
test_that("print_summarylm2: Expect output", {
expect_output(print_summarylm2(summarylm2(lm2(formula = quality ~ volatile.acidity + citric.acid + residual.sugar, data = wine))))
})
browseVignettes(hw4)
browseVignettes("hw4")
library(hw4)
browseVignettes("hw4")
library(hw4)
browseVignettes("hw4")
install_github("gnbosma/hw4")
library(devtools)
install_github("gnbosma/hw4")
library(hw4)
browseVignettes("hw4")
devtools::build_vignettes()
browseVignettes("hw4")
devtools::install(build_vignettes = T)
devtools::load_all(".")
devtools::load_all(".")
devtools::build_vignettes()
devtools::install(build_vignettes = T)
install_github("gnbosma/hw4")
devtools::install_github("gnbosma/hw4")
browseVignettes("hw4")
devtools::browseVignettes("hw4")
library(hw4)
devtools::build_vignettes()
devtools::install(build_vignettes = T)
install_github("gnbosma/hw4")
devtools::install_github("gnbosma/hw4")
browseVignettes("hw4")
devtools::build_vignettes()
devtools::install(build_vignettes = T)
library('hw4')
browseVignettes('hw4')
usethis::use_travis()
usethis::use_travis()
usethis::use_travis()
